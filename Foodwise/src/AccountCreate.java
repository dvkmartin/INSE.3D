/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.event.*;
import java.util.*;
import java.sql.Wrapper;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.mail.*;
import javax.mail.internet.*;
import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.JOptionPane;

/**
 *
 * @author INSE3D
 */
public class AccountCreate extends javax.swing.JFrame {

    static Properties properties = new Properties();

    static {
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
    }

    static final String JDBC_Driver = "com.mysql.jdbc.Driver";
    static final String Database_Path = "jdbc:mysql://167.99.88.104:3306/new?verifyServerCertificate=false&useSSL=true";
    static final String DBUsername = "foodwiseAdmin";
    static final String DBPassword = "Inse3d..";

    Wrapper connect = null;

    /**
     * Creates new form AccountCreate
     */
    public AccountCreate() {
        initComponents();
        PassCheck();
        EmailCheck();
        SignUp();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEmailAddress3 = new javax.swing.JTextField();
        returnBtn = new javax.swing.JButton();
        txtEmailAddress = new javax.swing.JTextField();
        txtReenterEmailAddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnCreateAccount = new javax.swing.JButton();
        txtrEmailValidationCheck = new javax.swing.JTextField();
        txtValidation = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        passwordField_1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        returnBtn.setText("Return");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        txtEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailAddressActionPerformed(evt);
            }
        });

        jLabel1.setText("Create an Account");

        jLabel2.setText("Email Address");

        jLabel3.setText("Re-enter Email Address");

        jLabel4.setText("Password");

        jLabel6.setText("Re-enter Password");

        btnCreateAccount.setText("Create Account");

        txtValidation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValidationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtReenterEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(passwordField)
                                    .addComponent(passwordField_1)))
                            .addComponent(txtrEmailValidationCheck, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtValidation, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(returnBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(58, 58, 58)))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateAccount)
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(returnBtn)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReenterEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordField_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateAccount)
                .addGap(18, 18, 18)
                .addComponent(txtrEmailValidationCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(txtValidation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtValidationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValidationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValidationActionPerformed

    /**
     * Closes current frame, creates a new Login JFrame to show for user
     * @param evt 
     */
    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_returnBtnActionPerformed

    private void txtEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailAddressActionPerformed

    /**
     * Email comparison checker between email fields. Actively checks fields
     * when entering user email
     */
    public void PassCheck() {
        passwordField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                Updated();
            }

            public void removeUpdate(DocumentEvent e) {
                Updated();
            }

            public void insertUpdate(DocumentEvent e) {
                Updated();
            }

            public void Updated() {
                if (passwordField.getText().equals(passwordField_1.getText())) {
                    txtValidation.setText("Password comparison successful");
                    System.out.println("comparison successful ");
                } else {
                    txtValidation.setText("Make sure to re-enter your password!");
                }
            }
        });

        passwordField_1.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                Updated();
            }

            public void removeUpdate(DocumentEvent e) {
                Updated();
            }

            public void insertUpdate(DocumentEvent e) {
                Updated();
            }

            public void Updated() {
                if (passwordField_1.getText().equals(passwordField.getText())) {
                    txtValidation.setText("Looks good!");
                } else {
                    txtValidation.setText("Passwords do not match up!");
                    
                }
            }
        });
    }

    /**
     * Email comparison checker between email fields. Actively checks both
     * fields when entering user email
     */
    public void EmailCheck() {
        txtEmailAddress.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                Updated();
            }

            public void removeUpdate(DocumentEvent e) {
                Updated();
            }

            public void insertUpdate(DocumentEvent e) {
                Updated();
            }

            public void Updated() {
                String email = txtEmailAddress.getText();
                if (txtEmailAddress.getText().equals(txtReenterEmailAddress.getText())) {
                    try {
                        InternetAddress emailAddress = new InternetAddress(email);
                        emailAddress.validate();
                        System.out.println("successful comparison, successful validation ");
                        txtrEmailValidationCheck.setText("Looks good!");
                    } catch (Exception e) {
                        System.out.println("successful comparison, unsuccessful validation");
                        txtrEmailValidationCheck.setText("make sure to set a valid email address");
                        if (txtEmailAddress.getText().equals("") && txtEmailAddress.getText().equals("")) {
                            txtrEmailValidationCheck.setText("Please enter an email address!");
                        }
                    }
                } else if (!txtReenterEmailAddress.getText().equals(txtEmailAddress.getText())) {
                    txtrEmailValidationCheck.setText("Make sure to re-enter your email address!");
                } else {
                    txtrEmailValidationCheck.setText("Email addresses do not match");
                }
            }

        });

        txtReenterEmailAddress.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                Updated();
            }

            public void removeUpdate(DocumentEvent e) {
                Updated();
            }

            public void insertUpdate(DocumentEvent e) {
                Updated();
            }

            public void Updated() {
                String email = txtEmailAddress.getText();
                if (txtReenterEmailAddress.getText().equals(txtEmailAddress.getText())) {
                    try {
                        InternetAddress emailAddress = new InternetAddress(email);
                        emailAddress.validate();
                        System.out.println("successful comparison, successful validation ");
                        txtrEmailValidationCheck.setText("Looks good!");
                    } catch (Exception e) {
                        System.out.println("successful comparison, unsuccessful validation");
                        txtrEmailValidationCheck.setText("Make sure to set a valid email address");
                    }
                } else {
                    txtrEmailValidationCheck.setText("Email addresses do not match!");
                    
                }
            }

        });
    }

    /**
     * Text validation & email validation for creating a new account Insert
     * query to add account to the database Sends email to user after account
     * has been successfully created
     */
    public void SignUp() {
        btnCreateAccount.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String reciever = txtEmailAddress.getText();
                {
                    if (passwordField.getText().equals("") || (passwordField_1.getText().equals(""))) {
                        txtValidation.setText("Please enter your password!");
                    }
                    if (txtEmailAddress.getText().equals("") || (txtReenterEmailAddress.getText().equals(""))) {
                        txtrEmailValidationCheck.setText("Please enter your email address!");
                    }
                    if (txtEmailAddress.getText().equals(txtReenterEmailAddress.getText()) && (passwordField.getText().equals(passwordField_1.getText()) // 
                            && (!passwordField.getText().equals("")) && (!passwordField_1.getText().equals("")))) {
                        try {
                            InternetAddress emailAddress = new InternetAddress(reciever);
                            emailAddress.validate();
                            try {
                                Authenticator auth = new Authenticator() {
                                    public PasswordAuthentication getPasswordAuthentication() {
                                        return new PasswordAuthentication("FoodWise11@gmail.com", "FoodIsGreat@Portsmouth!");
                                    }
                                };
                                String createAccountQuery = "INSERT INTO login (username, password) VALUES"
                                        + " ('" + txtReenterEmailAddress.getText() + "', '" + passwordField.getText() + "')"; //needs email validation, can create multiple accounts with same email address
                                connect = DriverManager.getConnection(Database_Path, DBUsername, DBPassword);
                                ((Connection) connect).createStatement().execute(createAccountQuery);
                                Session session = Session.getInstance(properties, auth);
                                Message email = new MimeMessage(session);
                                email.setFrom(new InternetAddress("FoodWise11@gmail.com"));
                                email.setRecipient(Message.RecipientType.TO, new InternetAddress(reciever));
                                email.setSentDate(new Date());
                                email.setSubject("Foodwise Account Creation");
                                email.setText("Your Account has been successfully created!, your password is: " + passwordField.getText());
                                Transport.send(email);
                                JOptionPane.showMessageDialog(null, "Your account has been successfully created!");
                                ((java.sql.Connection) connect).close();
                            } catch (Exception x) {
                                x.printStackTrace();
                            }
                        } catch (Exception E) {
                            E.printStackTrace();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Make sure to enter valid credentials");
                    }
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField passwordField_1;
    private javax.swing.JButton returnBtn;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtEmailAddress3;
    private javax.swing.JTextField txtReenterEmailAddress;
    private javax.swing.JTextField txtValidation;
    private javax.swing.JTextField txtrEmailValidationCheck;
    // End of variables declaration//GEN-END:variables
}
